/*! For license information please see algorithm.js.LICENSE.txt */
(()=>{"use strict";var e={276078:function(e,t,s){var r=this&&this.__awaiter||function(e,t,s,r){return new(s||(s=Promise))((function(i,o){function n(e){try{h(r.next(e))}catch(e){o(e)}}function a(e){try{h(r.throw(e))}catch(e){o(e)}}function h(e){var t;e.done?i(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(n,a)}h((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.GeneticAlgorithmBase=void 0;const i=s(556913);class o extends i.AlgorithmBase{init(e){return r(this,void 0,void 0,(function*(){}))}}t.GeneticAlgorithmBase=o},156284:(e,t,s)=>{t.GeneticAlgorithmBase=void 0;var r=s(276078);Object.defineProperty(t,"GeneticAlgorithmBase",{enumerable:!0,get:function(){return r.GeneticAlgorithmBase}})},205443:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Acid=void 0;t.Acid=class{constructor(e){this._value=e}get value(){return this._value}mutation(e){this._value=e}}},304214:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AlgorithmBase=void 0;t.AlgorithmBase=class{constructor(e){this._bestChanged=e,this._chromosomes=[],this._fitness=0}get generationNumber(){return this.islands.reduce(((e,t)=>e+t.generationNumber),0)}get offspringNumber(){return this.islands.reduce(((e,t)=>e+t.offspringNumber),0)}get initialized(){return this.islands.every((e=>e.initialized))}get chromosomes(){return this._chromosomes}get migration(){}get best(){return this._chromosomes[0]}get progress(){return this.termination.progress}get hasReached(){return this.termination.hasReached(this)}resetChromosomes(){this._chromosomes.length=0,this.islands.forEach((e=>{e.population.chromosomes.forEach((e=>{this._chromosomes.push(e)}))}))}updateChromosomes(){if(this._chromosomes.sort(((e,t)=>t.fitness-e.fitness)),this._chromosomes.length){const e=this._chromosomes[0].fitness;e>=0&&e!==this._fitness&&(this._fitness=e,this._bestChanged&&this._bestChanged())}}reset(){var e;this.islands.forEach((e=>e.reset())),this.resetChromosomes(),null===(e=this.migration)||void 0===e||e.init(),this.termination.init(),this.updateChromosomes(),this.performReset()}performReset(){}step(){var e;this.hasReached||(this.islands.forEach((e=>e.step())),null===(e=this.migration)||void 0===e||e.migrate(this),this.updateChromosomes(),this.performStep())}performStep(){}}},775229:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ChromosomeBase=void 0;t.ChromosomeBase=class{constructor(e,t=!1){if(!t&&e<1)throw new Error("Too short.");this.acids=new Array(e)}createFromAcids(e){this.acids=[...e]}get length(){return this.acids.length}getAcid(e){return this.acids[e]}setAcid(e,t){this.acids[e]=t}deleteAcid(e){this.acids.splice(e,1)}insertAcid(e,t){this.acids.splice(e,0,t)}generateAcids(){[...Array(this.length).keys()].forEach((e=>this.setAcid(e,this.generateAcid(e))))}clone(){const e=this.createNew();return e.copyFrom(this),e}copyFrom(e){e.length!==this.length&&(this.acids=new Array(e.length));for(let t=e.length;--t>=0;)this.acids[t]=e.getAcid(t);this.performCopyFrom(e)}performCopyFrom(e){}mutation(e){this.acids[e]=this.generateAcid(e)}}},74421:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CrossoverBase=void 0;t.CrossoverBase=class{constructor(e,t,s){this._parentsNumber=e,this._childrenNumber=t,this._probability=s}get parentsNumber(){return this._parentsNumber}get childrenNumber(){return this._childrenNumber}cross(e){if(e.length!==this.parentsNumber)throw new Error("Length is not same.");const t=this.performCross(e,this._probability);if(t.length!==this.childrenNumber)throw new Error("Length is not same.");return t}}},285254:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FitnessBase=void 0;t.FitnessBase=class{}},600756:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.IslandBase=void 0;t.IslandBase=class{constructor(){this._generationNumber=0,this._offspringNumber=0,this._initialized=!1}get generationNumber(){return this._generationNumber}get offspringNumber(){return this._offspringNumber}get initialized(){return this._initialized}reset(){this._initialized=!1,this.population.init(),this.population.chromosomes.forEach((e=>{this.fitness.evaluate(e)})),this._generationNumber=0,this._offspringNumber=0,this.performReset(),this._initialized=!0}performReset(){}performMutate(e){e.forEach((e=>{this.mutation.mutate(e)}))}performEvaluate(e){e.forEach((e=>{this.fitness.evaluate(e)}))}step(){this._initialized||this.reset();const{parents:e,population:t}=this.selection.select(this.population.chromosomes),s=this.crossover.cross(e),r=s.length;this.performMutate(s);const i=[...s];e.forEach((e=>{i.push(e)})),this.performEvaluate(i);const o=this.reinsertion.select(t,s,e);this.population.update(o),this._generationNumber++,this._offspringNumber+=r,this.performStep()}performStep(){}}},991475:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MigrationBase=void 0;class s{constructor(){this.prev=0,this.time=0}get rate(){return.1}get interval(){return 1e4}init(){this.prev=0,this.time=0}getCount(e){return e.offspringNumber}getDestinations(e){const t=e.islands.length,s=this.time%(t-1);return[...Array(t).keys()].map((e=>(e+1+s)%t))}migrate(e){if(e.islands.length<=1)return;const t=this.getCount(e);t>=this.prev+this.interval&&(this.prev=t,this.performMigrate(e),this.time++)}static takeRandomChromosomes(e,t){const s=[];for(;--t>=0;)s.push(...e.splice(Math.floor(Math.random()*e.length),1));return s}getTakeCount(e){return Math.ceil(e.length*this.rate)}static splitChromosomes(e,t){const r=[...e];return{population:r,emigrants:s.takeRandomChromosomes(r,t)}}performMigrate(e){const t=this.getDestinations(e),r=e.islands.map((e=>s.splitChromosomes(e.population.chromosomes,this.getTakeCount(e.population.chromosomes))));r.forEach(((e,s)=>{r[t[s]].population.push(...e.emigrants)})),e.islands.forEach(((e,t)=>e.population.update(r[t].population)))}}t.MigrationBase=s},568944:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MutationBase=void 0;t.MutationBase=class{constructor(e,t=0,s=0){this._probability=e,this._deleteProbability=t,this._insertProbability=s}mutate(e){this._deleteProbability>0&&Math.random()<this._deleteProbability&&this.deleteAcid(e),[...Array(e.length).keys()].forEach((t=>{Math.random()<this._probability&&e.mutation(t)})),this._insertProbability>0&&Math.random()<this._insertProbability&&this.insertAcid(e)}deleteAcid(e){e.length<=1||e.deleteAcid(Math.floor(Math.random()*e.length))}insertAcid(e){const t=Math.floor(Math.random()*(e.length+1));e.insertAcid(t,e.generateAcid(t))}}},155691:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PopulationBase=void 0;t.PopulationBase=class{constructor(e,t){this._size=e,this._adamChromosome=t,this._chromosomes=[],this._pool=[],[...Array(e)].forEach((()=>{this._pool.push(t.clone())}))}get chromosomes(){return this._chromosomes}get size(){return this._size}init(){this._chromosomes=new Array,[...Array(this.size)].forEach((()=>this._chromosomes.push(this._adamChromosome.createNew()))),this.performInit()}performInit(){}update(e){if(this.size!==e.length)throw new Error("Population size does not match the setting.");for(let t=e.length;--t>=0;)this._pool[t].copyFrom(e[t]);for(let e=this._pool.length;--e>=0;)this._chromosomes[e].copyFrom(this._pool[e])}}},871788:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ReinsertionBase=void 0;t.ReinsertionBase=class{}},310430:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SelectionBase=void 0;t.SelectionBase=class{takeRandom(e){return e.splice(Math.floor(Math.random()*e.length),1)[0]}takeByFitness(e){const t=e.reduce(((e,t)=>e+t.fitness),0);let s=0;const r=Math.random()*t;for(let t=0;t<e.length;t++){const i=e[t];if(s+=i.fitness,s>=r)return e.splice(t,1),i}throw new Error("Unexpected error")}takeByOrder(e){const t=e.length*(e.length+1)/2;let s=0;const r=Math.random()*t;for(let t=0;t<e.length;t++)if(s+=e.length-t,s>=r){const s=e[t];return e.splice(t,1),s}throw new Error("Unexpected error")}}},95293:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TerminationBase=void 0;t.TerminationBase=class{constructor(){this._hasReached=!1,this._progress=0}get progress(){return this._progress}init(){this._hasReached=!1,this._progress=0,this.performInit()}performInit(){}hasReached(e){return this._hasReached||(this._hasReached=this.performHasReached(e),this._hasReached?this._progress=1:this._progress=this.performGetProgress(e)),this._hasReached}}},556913:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TerminationBase=t.SelectionBase=t.ReinsertionBase=t.MigrationBase=t.IslandBase=t.PopulationBase=t.MutationBase=t.FitnessBase=t.CrossoverBase=t.ChromosomeBase=t.AlgorithmBase=t.Acid=void 0;var r=s(205443);Object.defineProperty(t,"Acid",{enumerable:!0,get:function(){return r.Acid}});var i=s(304214);Object.defineProperty(t,"AlgorithmBase",{enumerable:!0,get:function(){return i.AlgorithmBase}});var o=s(775229);Object.defineProperty(t,"ChromosomeBase",{enumerable:!0,get:function(){return o.ChromosomeBase}});var n=s(74421);Object.defineProperty(t,"CrossoverBase",{enumerable:!0,get:function(){return n.CrossoverBase}});var a=s(285254);Object.defineProperty(t,"FitnessBase",{enumerable:!0,get:function(){return a.FitnessBase}});var h=s(568944);Object.defineProperty(t,"MutationBase",{enumerable:!0,get:function(){return h.MutationBase}});var c=s(155691);Object.defineProperty(t,"PopulationBase",{enumerable:!0,get:function(){return c.PopulationBase}});var l=s(600756);Object.defineProperty(t,"IslandBase",{enumerable:!0,get:function(){return l.IslandBase}});var u=s(991475);Object.defineProperty(t,"MigrationBase",{enumerable:!0,get:function(){return u.MigrationBase}});var m=s(871788);Object.defineProperty(t,"ReinsertionBase",{enumerable:!0,get:function(){return m.ReinsertionBase}});var d=s(310430);Object.defineProperty(t,"SelectionBase",{enumerable:!0,get:function(){return d.SelectionBase}});var p=s(95293);Object.defineProperty(t,"TerminationBase",{enumerable:!0,get:function(){return p.TerminationBase}})}},t={};function s(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,s),o.exports}s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var e=s(156284);class t{static getValue(e){return e.getGenes()}}var r=s(556913);class i extends r.TerminationBase{constructor(e){super(),this.offspringNumber=e}performGetProgress(e){return e.offspringNumber/this.offspringNumber}performHasReached(e){return e.offspringNumber>=this.offspringNumber}}class o extends r.MigrationBase{get rate(){return.01}get interval(){return 1e5}}class n extends r.PopulationBase{constructor(e,t){super(e,t)}}class a extends r.ChromosomeBase{constructor(){var e,t,s;super(0,!0),s=void 0,(t="_fitness")in(e=this)?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,this._fitness=-1,this.generateAcids()}get fitness(){return this._fitness}set fitness(e){this._fitness=e}createNew(){return new a}generateAcid(e){return new r.Acid(Math.floor(2*Math.random()))}getGenes(){return[...Array(this.length).keys()].map((e=>Number(this.getAcid(e).value)))}performCopyFrom(e){this._fitness=e.fitness}}class h extends r.FitnessBase{constructor(e){super(),this.testData=e}evaluate(e){const s=e,r=t.getValue(s),i=Math.abs(this.testData.length-r.length)+Math.abs(this.testData.length-r.reduce(((e,t)=>e+t),0));s.fitness=1/(i+1)}}class c extends r.MutationBase{constructor(e,t,s){super(e,t,s)}}function l(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class u extends r.IslandBase{constructor(e,t,s,r,i){super(),l(this,"_fitness",void 0),l(this,"_mutation",void 0),l(this,"_population",void 0),this._fitness=new h(i),this._mutation=new c(t,s,r),this._population=new n(e,new a)}get population(){return this._population}get fitness(){return this._fitness}get mutation(){return this._mutation}}class m extends r.CrossoverBase{constructor(e,t,s){var r,i,o;super(2,2*s,e),this.mixProbability=t,this.crossoverTime=s,o=[],(i="_pool")in(r=this)?Object.defineProperty(r,i,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[i]=o,t>.5&&(this.mixProbability=1-t),this.mixProbability=Math.min(Math.max(this.mixProbability,0),.5),[...Array(this.childrenNumber)].forEach((()=>{this._pool.push(new a)}))}performCross(e,t){const s=e[0],r=e[1];let i=0;return[...Array(this.crossoverTime)].forEach((()=>{const e=this._pool[i++],o=this._pool[i++];if(e.copyFrom(s),o.copyFrom(r),t>0&&Math.random()<t){const t=Math.min(s.length,r.length),i=s.length-r.length<=0?0:Math.floor(Math.random()*(s.length-r.length+1)),n=s.length-r.length>=0?0:Math.floor(Math.random()*(r.length-s.length+1));for(let a=0;a<t;a++)Math.random()<this.mixProbability&&(e.setAcid(i+a,r.getAcid(n+a)),o.setAcid(n+a,s.getAcid(i+a)))}})),this._pool}}class d extends r.ReinsertionBase{constructor(e=!0){super(),this.addParentsToOffspring=e}select(e,t,s){const r=[...t];this.addParentsToOffspring&&r.push(...s),r.sort(((e,t)=>(t.fitness??-1)-(e.fitness??-1)));const i=[...e];return i.push(r.splice(0,1)[0]),i.push(this.take(r)),i}take(e){const t=e.reduce(((e,t)=>e+(t.fitness??0)),0);let s=0;const r=Math.random()*t;for(const t of e)if(s+=t.fitness??0,s>=r)return t;throw new Error("Unexpected error")}}class p extends r.SelectionBase{}class f extends p{select(e){const t=[...e];return{parents:[this.takeByOrder(t),this.takeByOrder(t)],population:t}}}function g(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class b extends u{constructor(e,t){super(Math.floor(e.populationSize/e.islandNumber),e.mutationProbability,e.mutationDeleteProbability,e.mutationInsertProbability,t),g(this,"_crossover",void 0),g(this,"_reinsertion",void 0),g(this,"_selection",void 0),this._crossover=new m(e.crossoverProbability,e.mixProbability,e.crossoverTime),this._reinsertion=new d,this._selection=new f}get crossover(){return this._crossover}get reinsertion(){return this._reinsertion}get selection(){return this._selection}}class _ extends r.CrossoverBase{constructor(e){var t,s,r;super(2,2,e),r=[],(s="_pool")in(t=this)?Object.defineProperty(t,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[s]=r,[...Array(this.childrenNumber)].forEach((()=>{this._pool.push(new a)}))}performCross(e,t){let s=0;return e.forEach((e=>{this._pool[s++].copyFrom(e)})),this._pool}}class v extends r.ReinsertionBase{constructor(){super()}select(e,t,s){return[...e,...t]}}function y(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class B extends u{constructor(e,t){super(Math.floor(e.populationSize/e.islandNumber),e.mutationProbability,e.mutationDeleteProbability,e.mutationInsertProbability,t),y(this,"_crossover",void 0),y(this,"_reinsertion",void 0),y(this,"_selection",void 0),this._selection=new f,this._crossover=new _(e.crossoverProbability),this._reinsertion=new v}get crossover(){return this._crossover}get reinsertion(){return this._reinsertion}get selection(){return this._selection}}class P{constructor(e){this._length=e}get length(){return this._length}}function M(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class A extends e.GeneticAlgorithmBase{constructor(e,t){super(e),M(this,"_islands",void 0),M(this,"_termination",void 0),M(this,"_migration",void 0),this._termination=new i(t.terminateOffspringNumber),this._migration=new o,this._islands=[]}async init(e){const t=new P(e.length),s=Math.floor(e.islandNumber*e.culturalIslandRate),r=e.islandNumber-s;[...Array(r)].forEach((()=>{this._islands.push(new b(e,t))})),s>0&&[...Array(s)].forEach((()=>{this._islands.push(new B(e,t))}))}get islands(){return this._islands}get migration(){return this._migration}get termination(){return this._termination}async getObject(){return{population:this.chromosomes.map((e=>{const s=e;return{value:t.getValue(s).join(" "),fitness:s.fitness??0}})),progress:this.progress}}}s.g.GeneticAlgorithm=class extends A{}})()})();